// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LoginForm component should renders correctly 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "paddingBottom": 0,
    }
  }
>
  <TextInput
    allowFontScaling={true}
    autoCapitalize="none"
    editable={false}
    onChangeText={[Function]}
    placeholder="Username"
    placeholderTextColor="#444"
    rejectResponderTermination={true}
    returnKeyType="done"
    style={
      Array [
        Object {
          "backgroundColor": "#f8f8f8",
          "borderRadius": 4,
          "color": "#444",
          "fontSize": 16,
          "fontWeight": "600",
          "height": 50,
          "letterSpacing": 2,
          "padding": 15,
        },
        Object {
          "marginTop": 10,
        },
      ]
    }
    testID="usernameInput"
    underlineColorAndroid="transparent"
    value=""
  />
  <View>
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      editable={false}
      onChangeText={[Function]}
      placeholder="Password"
      placeholderTextColor="#444"
      rejectResponderTermination={true}
      returnKeyType="done"
      secureTextEntry={true}
      style={
        Array [
          Object {
            "backgroundColor": "#f8f8f8",
            "borderRadius": 4,
            "color": "#444",
            "fontSize": 16,
            "fontWeight": "600",
            "height": 50,
            "letterSpacing": 2,
            "padding": 15,
          },
          Object {
            "marginTop": 10,
          },
        ]
      }
      testID="userPasswordInput"
      underlineColorAndroid="transparent"
      value=""
    />
    <Text
      allowFontScaling={false}
      onPress={[Function]}
      style={
        Array [
          Object {
            "color": undefined,
            "fontSize": 25,
          },
          Object {
            "position": "absolute",
            "right": 8,
            "top": 22,
          },
          Object {
            "fontFamily": "Ionicons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
    >
      
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
          "justifyContent": "flex-end",
        },
        Object {
          "marginTop": 10,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "marginLeft": 15,
            "marginRight": 15,
          },
          undefined,
          Object {
            "backgroundColor": "transparent",
            "borderColor": "#FFF",
            "borderWidth": 1,
            "marginLeft": 10,
            "marginRight": 0,
          },
          Object {
            "borderRadius": 30,
          },
        ]
      }
    >
      <View
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={null}
      >
        <View
          pointerEvents="box-only"
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#9E9E9E",
                "flexDirection": "row",
                "justifyContent": "center",
                "padding": 19,
              },
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "borderRadius": 30,
              },
              Object {
                "padding": 12,
              },
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
            ]
          }
        >
          <Text
            style={
              Array [
                Object {},
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                Array [
                  Object {
                    "color": "white",
                    "fontSize": 20,
                  },
                  undefined,
                  Object {
                    "fontSize": 17.5,
                  },
                  undefined,
                  Object {
                    "fontSize": 16,
                    "fontWeight": "600",
                    "letterSpacing": 1.25,
                  },
                  undefined,
                  undefined,
                  undefined,
                ],
              ]
            }
          >
            CREATE A CHANNEL
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "marginLeft": 15,
            "marginRight": 15,
          },
          undefined,
          Object {
            "backgroundColor": "transparent",
            "borderColor": "#FFF",
            "borderWidth": 1,
            "marginLeft": 10,
            "marginRight": 0,
          },
          Object {
            "borderRadius": 30,
          },
        ]
      }
    >
      <View
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={null}
        testID="loginButton"
      >
        <View
          pointerEvents="box-only"
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#9E9E9E",
                "flexDirection": "row",
                "justifyContent": "center",
                "padding": 19,
              },
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "borderRadius": 30,
              },
              Object {
                "padding": 12,
              },
              undefined,
              undefined,
              undefined,
              undefined,
              false,
              false,
            ]
          }
        >
          <Text
            style={
              Array [
                Object {},
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                Array [
                  Object {
                    "color": "white",
                    "fontSize": 20,
                  },
                  undefined,
                  Object {
                    "fontSize": 17.5,
                  },
                  undefined,
                  Object {
                    "fontSize": 16,
                    "fontWeight": "600",
                    "letterSpacing": 1.25,
                  },
                  undefined,
                  undefined,
                  false,
                ],
              ]
            }
          >
            LOGIN
          </Text>
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
          "justifyContent": "flex-end",
        },
        Object {
          "paddingTop": 15,
        },
      ]
    }
  >
    <Text
      onPress={[Function]}
      style={
        Array [
          Object {
            "color": "#FFFFFF",
          },
          Object {
            "fontWeight": "bold",
          },
        ]
      }
    >
      FORGOT PASSWORD
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
          "justifyContent": "center",
        },
        Object {
          "paddingTop": 15,
        },
        Object {
          "marginTop": 20,
        },
      ]
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "white",
            "fontSize": 18,
          },
          Object {
            "paddingTop": 1,
          },
          Object {
            "fontFamily": "Ionicons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
    >
      
    </Text>
    <Text
      onPress={[Function]}
      style={
        Array [
          Object {
            "color": "#FFFFFF",
          },
        ]
      }
    >
        
      English
    </Text>
  </View>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      pointerEvents="box-none"
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      style={
        Object {
          "flex": 1,
          "justifyContent": "center",
          "margin": 37.5,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "white",
            },
            Object {
              "height": 300,
              "paddingBottom": 8,
            },
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "fontSize": 16,
              },
              Object {
                "textAlign": "center",
              },
              Object {
                "backgroundColor": "#4690D6",
              },
              Object {
                "padding": 10,
              },
              Object {
                "color": "#FFFFFF",
              },
            ]
          }
        >
          Language
        </Text>
        <View
          style={
            Array [
              Object {
                "flex": 1,
              },
            ]
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <RCTPicker
              items={
                Array [
                  Object {
                    "label": "Spanish",
                    "textColor": undefined,
                    "value": "es",
                  },
                  Object {
                    "label": "English",
                    "textColor": undefined,
                    "value": "en",
                  },
                  Object {
                    "label": "Arabic",
                    "textColor": undefined,
                    "value": "ar",
                  },
                  Object {
                    "label": "German",
                    "textColor": undefined,
                    "value": "de",
                  },
                  Object {
                    "label": "French",
                    "textColor": undefined,
                    "value": "fr",
                  },
                  Object {
                    "label": "Hindi",
                    "textColor": undefined,
                    "value": "hi",
                  },
                  Object {
                    "label": "Italian",
                    "textColor": undefined,
                    "value": "it",
                  },
                  Object {
                    "label": "Japanese",
                    "textColor": undefined,
                    "value": "ja",
                  },
                  Object {
                    "label": "Portuguese",
                    "textColor": undefined,
                    "value": "pt",
                  },
                  Object {
                    "label": "Russian",
                    "textColor": undefined,
                    "value": "ru",
                  },
                  Object {
                    "label": "Vietnamese",
                    "textColor": undefined,
                    "value": "vi",
                  },
                  Object {
                    "label": "Chinese",
                    "textColor": undefined,
                    "value": "zh",
                  },
                  Object {
                    "label": "Slovak",
                    "textColor": undefined,
                    "value": "sk",
                  },
                ]
              }
              onChange={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              selectedIndex={1}
              style={
                Array [
                  Object {
                    "height": 216,
                  },
                  Object {
                    "fontSize": 14,
                  },
                ]
              }
            />
          </View>
          <View
            style={
              Array [
                Object {
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "white",
                  "borderColor": "#777777",
                  "borderRadius": 20,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "margin": 4,
                  "opacity": 1,
                  "padding": 4,
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#777777",
                    },
                    undefined,
                  ]
                }
              >
                 
                Cancel
                 
              </Text>
            </View>
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "white",
                  "borderColor": "#4690D6",
                  "borderRadius": 20,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "margin": 4,
                  "opacity": 1,
                  "padding": 4,
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#4690D6",
                    },
                    undefined,
                  ]
                }
              >
                 
                Ok
                 
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </Modal>
</View>
`;
