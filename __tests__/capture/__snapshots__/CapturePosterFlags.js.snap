// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`cature poster flags component should renders correctly for props false 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "borderRadius": 5,
      "flexDirection": "row",
      "marginBottom": 5,
      "marginRight": 8,
    }
  }
>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  />
  <View
    collapsable={false}
  >
    <View
      onLayout={[Function]}
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
            "opacity": 1,
            "paddingLeft": 10,
          }
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "#777777",
                "fontSize": 25,
              },
              Array [
                undefined,
                false,
              ],
              Object {
                "fontFamily": "Material Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
    </View>
    <Modal
      hardwareAccelerated={false}
      onDismiss={[Function]}
      onRequestClose={[Function]}
      supportedOrientations={
        Array [
          "portrait",
          "portrait-upside-down",
          "landscape",
          "landscape-left",
          "landscape-right",
        ]
      }
      transparent={true}
      visible={false}
    >
      <View
        accessible={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          onLayout={[Function]}
          style={
            Object {
              "backgroundColor": "white",
              "borderRadius": 4,
              "left": 0,
              "marginTop": 20,
              "opacity": 0,
              "position": "absolute",
              "shadowColor": "black",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.14,
              "shadowRadius": 2,
              "top": 0,
              "transform": Array [],
              "width": 180,
            }
          }
        >
          <View
            style={
              Object {
                "overflow": "hidden",
              }
            }
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "height": 48,
                    "justifyContent": "center",
                    "maxWidth": 248,
                    "minWidth": 124,
                  },
                  undefined,
                ]
              }
            >
              <Text
                ellipsizeMode="clip"
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "fontSize": 14,
                      "fontWeight": "400",
                      "paddingHorizontal": 16,
                    },
                    false,
                    Array [
                      Object {
                        "color": "#777777",
                      },
                      false,
                    ],
                  ]
                }
              >
                 
                Nudity
              </Text>
            </View>
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "height": 48,
                    "justifyContent": "center",
                    "maxWidth": 248,
                    "minWidth": 124,
                  },
                  undefined,
                ]
              }
            >
              <Text
                ellipsizeMode="clip"
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "fontSize": 14,
                      "fontWeight": "400",
                      "paddingHorizontal": 16,
                    },
                    false,
                    Array [
                      Object {
                        "color": "#777777",
                      },
                      false,
                    ],
                  ]
                }
              >
                 
                Pornography
              </Text>
            </View>
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "height": 48,
                    "justifyContent": "center",
                    "maxWidth": 248,
                    "minWidth": 124,
                  },
                  undefined,
                ]
              }
            >
              <Text
                ellipsizeMode="clip"
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "fontSize": 14,
                      "fontWeight": "400",
                      "paddingHorizontal": 16,
                    },
                    false,
                    Array [
                      Object {
                        "color": "#777777",
                      },
                      false,
                    ],
                  ]
                }
              >
                 
                Profanity
              </Text>
            </View>
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "height": 48,
                    "justifyContent": "center",
                    "maxWidth": 248,
                    "minWidth": 124,
                  },
                  undefined,
                ]
              }
            >
              <Text
                ellipsizeMode="clip"
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "fontSize": 14,
                      "fontWeight": "400",
                      "paddingHorizontal": 16,
                    },
                    false,
                    Array [
                      Object {
                        "color": "#777777",
                      },
                      false,
                    ],
                  ]
                }
              >
                 
                Violence and Gore
              </Text>
            </View>
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "height": 48,
                    "justifyContent": "center",
                    "maxWidth": 248,
                    "minWidth": 124,
                  },
                  undefined,
                ]
              }
            >
              <Text
                ellipsizeMode="clip"
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "fontSize": 14,
                      "fontWeight": "400",
                      "paddingHorizontal": 16,
                    },
                    false,
                    Array [
                      Object {
                        "color": "#777777",
                      },
                      false,
                    ],
                  ]
                }
              >
                 
                Race and Religion
              </Text>
            </View>
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "height": 48,
                    "justifyContent": "center",
                    "maxWidth": 248,
                    "minWidth": 124,
                  },
                  undefined,
                ]
              }
            >
              <Text
                ellipsizeMode="clip"
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "fontSize": 14,
                      "fontWeight": "400",
                      "paddingHorizontal": 16,
                    },
                    false,
                    Array [
                      Object {
                        "color": "#777777",
                      },
                      false,
                    ],
                  ]
                }
              >
                 
                Other
              </Text>
            </View>
          </View>
        </View>
      </View>
    </Modal>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
        "opacity": 1,
        "paddingLeft": 10,
      }
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "#777777",
            "fontSize": 25,
          },
          undefined,
          Object {
            "fontFamily": "Material Icons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
    >
      
    </Text>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
        "opacity": 1,
        "paddingLeft": 10,
      }
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "#777777",
            "fontSize": 25,
          },
          undefined,
          Object {
            "fontFamily": "FontAwesome",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
    >
      
    </Text>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "borderRightWidth": 0,
        "flexDirection": "row",
        "justifyContent": "center",
        "opacity": 1,
        "paddingLeft": 10,
      }
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "#777777",
            "fontSize": 30,
          },
          undefined,
          Object {
            "fontFamily": "Ionicons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
    >
      
    </Text>
  </View>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Array [
          Array [
            Object {
              "margin": 37.5,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
            },
            Object {
              "flex": 1,
              "justifyContent": "center",
            },
            undefined,
            Object {
              "margin": 0,
            },
          ],
          Object {
            "paddingBottom": 0,
          },
        ]
      }
    >
      <View
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        onModalWillHide={[Function]}
        onModalWillShow={[Function]}
        pointerEvents="box-none"
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "margin": 37.5,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
          }
        }
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeThreshold={100}
      >
        <View
          style={
            Object {
              "backgroundColor": "#fff",
              "borderRadius": 5,
              "padding": 10,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              style={
                Object {
                  "flexGrow": 1,
                  "fontFamily": "Roboto",
                  "fontSize": 14,
                  "fontWeight": "600",
                  "letterSpacing": 1,
                  "marginLeft": 10,
                }
              }
            >
              SHARE
            </Text>
            <Text
              allowFontScaling={false}
              onPress={[Function]}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 28,
                  },
                  Object {
                    "alignSelf": "flex-end",
                    "marginRight": 10,
                    "padding": 5,
                  },
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "opacity": 1,
                "padding": 10,
              }
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": "#cccccc",
                    "fontSize": 25,
                  },
                  undefined,
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
            <Text
              style={
                Array [
                  Object {
                    "color": "#777777",
                    "flexGrow": 1,
                    "fontFamily": "Roboto",
                    "fontSize": 13,
                    "letterSpacing": 1,
                    "marginLeft": 6,
                  },
                  undefined,
                ]
              }
            >
              FACEBOOK
            </Text>
          </View>
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "opacity": 1,
                "padding": 10,
              }
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": "#cccccc",
                    "fontSize": 25,
                  },
                  undefined,
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
            <Text
              style={
                Array [
                  Object {
                    "color": "#777777",
                    "flexGrow": 1,
                    "fontFamily": "Roboto",
                    "fontSize": 13,
                    "letterSpacing": 1,
                    "marginLeft": 6,
                  },
                  undefined,
                ]
              }
            >
              TWITTER
            </Text>
          </View>
        </View>
      </View>
    </View>
  </Modal>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Array [
          Array [
            Object {
              "margin": 37.5,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
            },
            Object {
              "flex": 1,
              "justifyContent": "center",
            },
            undefined,
            Object {
              "margin": 0,
            },
          ],
          Object {
            "paddingBottom": 0,
          },
        ]
      }
    >
      <View
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        onModalWillHide={[Function]}
        onModalWillShow={[Function]}
        pointerEvents="box-none"
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "margin": 37.5,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
          }
        }
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeThreshold={100}
      >
        <View
          style={
            Object {
              "backgroundColor": "#fff",
              "borderRadius": 5,
              "padding": 10,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              style={
                Object {
                  "flexGrow": 1,
                  "fontFamily": "Roboto",
                  "fontSize": 14,
                  "fontWeight": "600",
                  "letterSpacing": 1,
                  "marginLeft": 10,
                }
              }
            >
              LOCK BY WIRE
            </Text>
            <Text
              allowFontScaling={false}
              onPress={[Function]}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 28,
                  },
                  Object {
                    "alignSelf": "flex-end",
                    "marginRight": 10,
                    "padding": 5,
                  },
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
          <View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "marginTop": 15,
                  "paddingLeft": 10,
                  "paddingRight": 10,
                }
              }
            >
              <TextInput
                allowFontScaling={true}
                keyboardType="numeric"
                onChangeText={[Function]}
                style={
                  Object {
                    "backgroundColor": "#eee",
                    "borderRadius": 3,
                    "color": "#666",
                    "flexGrow": 1,
                    "fontSize": 16,
                    "fontWeight": "300",
                    "marginRight": 3,
                    "padding": 5,
                    "textAlign": "right",
                  }
                }
                underlineColorAndroid="transparent"
                value="0"
              />
              <Text
                style={
                  Object {
                    "color": "#666",
                    "fontFamily": "Roboto",
                    "fontSize": 14,
                    "fontWeight": "300",
                    "letterSpacing": 1,
                  }
                }
              >
                TOKENS
              </Text>
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginTop": 15,
                }
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    Object {
                      "borderColor": "#ececec",
                      "borderRadius": 30,
                      "borderWidth": 1,
                      "padding": 8,
                    },
                    Object {
                      "backgroundColor": "transparent",
                    },
                    undefined,
                    Object {
                      "borderColor": "#4690D6",
                    },
                    false,
                  ]
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "paddingLeft": 5,
                      },
                      Object {
                        "paddingRight": 5,
                      },
                      Object {
                        "textAlign": "center",
                      },
                      undefined,
                      Object {
                        "color": "#4690D6",
                      },
                      false,
                    ]
                  }
                >
                  Done
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </Modal>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Array [
          Array [
            Object {
              "margin": 37.5,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
            },
            Object {
              "flex": 1,
              "justifyContent": "center",
            },
            undefined,
            Object {
              "margin": 0,
            },
          ],
          Object {
            "paddingBottom": 0,
          },
        ]
      }
    >
      <View
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        onModalWillHide={[Function]}
        onModalWillShow={[Function]}
        pointerEvents="box-none"
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "margin": 37.5,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
          }
        }
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeThreshold={100}
      >
        <View
          style={
            Object {
              "backgroundColor": "#fff",
              "borderRadius": 5,
              "padding": 10,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              style={
                Object {
                  "flexGrow": 1,
                  "fontFamily": "Roboto",
                  "fontSize": 14,
                  "fontWeight": "600",
                  "letterSpacing": 1,
                  "marginLeft": 10,
                }
              }
            >
              HASHTAGS
            </Text>
            <Text
              onPress={[Function]}
              style={
                Array [
                  Object {
                    "flexGrow": 1,
                    "fontFamily": "Roboto",
                    "fontSize": 14,
                    "fontWeight": "600",
                    "letterSpacing": 1,
                    "marginLeft": 10,
                  },
                  Object {
                    "borderColor": "#cccccc",
                    "borderRadius": 10,
                    "borderWidth": 1,
                    "color": "#777777",
                    "flexGrow": 0,
                    "fontSize": 12,
                    "fontWeight": "400",
                    "marginRight": 10,
                    "padding": 5,
                    "textAlign": "center",
                  },
                  null,
                ]
              }
            >
              SUGGESTED
            </Text>
            <Text
              allowFontScaling={false}
              onPress={[Function]}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 28,
                  },
                  Object {
                    "alignSelf": "flex-end",
                    "marginRight": 10,
                    "padding": 5,
                  },
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
          <RCTScrollView
            keyboardShouldPersistTaps="always"
          >
            <View>
              <View
                style={
                  Object {
                    "alignItems": "flex-start",
                    "display": "flex",
                    "flex": 1,
                    "flexDirection": "row",
                    "flexWrap": "wrap",
                  }
                }
              />
              <TextInput
                allowFontScaling={true}
                autoCapitalize="none"
                autoFocus={true}
                blurOnSubmit={false}
                keyboardType="default"
                onChangeText={[Function]}
                onEndEditing={[Function]}
                onSubmitEditing={[Function]}
                placeholder="eg. science"
                returnKeyType="next"
                style={
                  Object {
                    "borderBottomWidth": 1,
                    "borderColor": "#ccc",
                    "height": 35,
                    "padding": 10,
                    "width": "100%",
                  }
                }
                underlineColorAndroid="transparent"
                value=""
              />
            </View>
          </RCTScrollView>
        </View>
      </View>
    </View>
  </Modal>
</View>
`;

exports[`cature poster flags component should renders correctly for props true 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "borderRadius": 5,
      "flexDirection": "row",
      "marginBottom": 5,
      "marginRight": 8,
    }
  }
>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  />
  <View
    collapsable={false}
  >
    <View
      onLayout={[Function]}
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
            "opacity": 1,
            "paddingLeft": 10,
          }
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "#777777",
                "fontSize": 25,
              },
              Array [
                undefined,
                false,
              ],
              Object {
                "fontFamily": "Material Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
    </View>
    <Modal
      hardwareAccelerated={false}
      onDismiss={[Function]}
      onRequestClose={[Function]}
      supportedOrientations={
        Array [
          "portrait",
          "portrait-upside-down",
          "landscape",
          "landscape-left",
          "landscape-right",
        ]
      }
      transparent={true}
      visible={false}
    >
      <View
        accessible={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          onLayout={[Function]}
          style={
            Object {
              "backgroundColor": "white",
              "borderRadius": 4,
              "left": 0,
              "marginTop": 20,
              "opacity": 0,
              "position": "absolute",
              "shadowColor": "black",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.14,
              "shadowRadius": 2,
              "top": 0,
              "transform": Array [],
              "width": 180,
            }
          }
        >
          <View
            style={
              Object {
                "overflow": "hidden",
              }
            }
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "height": 48,
                    "justifyContent": "center",
                    "maxWidth": 248,
                    "minWidth": 124,
                  },
                  undefined,
                ]
              }
            >
              <Text
                ellipsizeMode="clip"
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "fontSize": 14,
                      "fontWeight": "400",
                      "paddingHorizontal": 16,
                    },
                    false,
                    Array [
                      Object {
                        "color": "#777777",
                      },
                      false,
                    ],
                  ]
                }
              >
                 
                Nudity
              </Text>
            </View>
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "height": 48,
                    "justifyContent": "center",
                    "maxWidth": 248,
                    "minWidth": 124,
                  },
                  undefined,
                ]
              }
            >
              <Text
                ellipsizeMode="clip"
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "fontSize": 14,
                      "fontWeight": "400",
                      "paddingHorizontal": 16,
                    },
                    false,
                    Array [
                      Object {
                        "color": "#777777",
                      },
                      false,
                    ],
                  ]
                }
              >
                 
                Pornography
              </Text>
            </View>
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "height": 48,
                    "justifyContent": "center",
                    "maxWidth": 248,
                    "minWidth": 124,
                  },
                  undefined,
                ]
              }
            >
              <Text
                ellipsizeMode="clip"
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "fontSize": 14,
                      "fontWeight": "400",
                      "paddingHorizontal": 16,
                    },
                    false,
                    Array [
                      Object {
                        "color": "#777777",
                      },
                      false,
                    ],
                  ]
                }
              >
                 
                Profanity
              </Text>
            </View>
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "height": 48,
                    "justifyContent": "center",
                    "maxWidth": 248,
                    "minWidth": 124,
                  },
                  undefined,
                ]
              }
            >
              <Text
                ellipsizeMode="clip"
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "fontSize": 14,
                      "fontWeight": "400",
                      "paddingHorizontal": 16,
                    },
                    false,
                    Array [
                      Object {
                        "color": "#777777",
                      },
                      false,
                    ],
                  ]
                }
              >
                 
                Violence and Gore
              </Text>
            </View>
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "height": 48,
                    "justifyContent": "center",
                    "maxWidth": 248,
                    "minWidth": 124,
                  },
                  undefined,
                ]
              }
            >
              <Text
                ellipsizeMode="clip"
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "fontSize": 14,
                      "fontWeight": "400",
                      "paddingHorizontal": 16,
                    },
                    false,
                    Array [
                      Object {
                        "color": "#777777",
                      },
                      false,
                    ],
                  ]
                }
              >
                 
                Race and Religion
              </Text>
            </View>
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "height": 48,
                    "justifyContent": "center",
                    "maxWidth": 248,
                    "minWidth": 124,
                  },
                  undefined,
                ]
              }
            >
              <Text
                ellipsizeMode="clip"
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "fontSize": 14,
                      "fontWeight": "400",
                      "paddingHorizontal": 16,
                    },
                    false,
                    Array [
                      Object {
                        "color": "#777777",
                      },
                      false,
                    ],
                  ]
                }
              >
                 
                Other
              </Text>
            </View>
          </View>
        </View>
      </View>
    </Modal>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
        "opacity": 1,
        "paddingLeft": 10,
      }
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "#777777",
            "fontSize": 25,
          },
          undefined,
          Object {
            "fontFamily": "Material Icons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
    >
      
    </Text>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
        "opacity": 1,
        "paddingLeft": 10,
      }
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "#777777",
            "fontSize": 25,
          },
          undefined,
          Object {
            "fontFamily": "FontAwesome",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
    >
      
    </Text>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "borderRightWidth": 0,
        "flexDirection": "row",
        "justifyContent": "center",
        "opacity": 1,
        "paddingLeft": 10,
      }
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "#777777",
            "fontSize": 30,
          },
          undefined,
          Object {
            "fontFamily": "Ionicons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
    >
      
    </Text>
  </View>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Array [
          Array [
            Object {
              "margin": 37.5,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
            },
            Object {
              "flex": 1,
              "justifyContent": "center",
            },
            undefined,
            Object {
              "margin": 0,
            },
          ],
          Object {
            "paddingBottom": 0,
          },
        ]
      }
    >
      <View
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        onModalWillHide={[Function]}
        onModalWillShow={[Function]}
        pointerEvents="box-none"
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "margin": 37.5,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
          }
        }
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeThreshold={100}
      >
        <View
          style={
            Object {
              "backgroundColor": "#fff",
              "borderRadius": 5,
              "padding": 10,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              style={
                Object {
                  "flexGrow": 1,
                  "fontFamily": "Roboto",
                  "fontSize": 14,
                  "fontWeight": "600",
                  "letterSpacing": 1,
                  "marginLeft": 10,
                }
              }
            >
              SHARE
            </Text>
            <Text
              allowFontScaling={false}
              onPress={[Function]}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 28,
                  },
                  Object {
                    "alignSelf": "flex-end",
                    "marginRight": 10,
                    "padding": 5,
                  },
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "opacity": 1,
                "padding": 10,
              }
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": "#cccccc",
                    "fontSize": 25,
                  },
                  undefined,
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
            <Text
              style={
                Array [
                  Object {
                    "color": "#777777",
                    "flexGrow": 1,
                    "fontFamily": "Roboto",
                    "fontSize": 13,
                    "letterSpacing": 1,
                    "marginLeft": 6,
                  },
                  undefined,
                ]
              }
            >
              FACEBOOK
            </Text>
          </View>
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "opacity": 1,
                "padding": 10,
              }
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": "#cccccc",
                    "fontSize": 25,
                  },
                  undefined,
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
            <Text
              style={
                Array [
                  Object {
                    "color": "#777777",
                    "flexGrow": 1,
                    "fontFamily": "Roboto",
                    "fontSize": 13,
                    "letterSpacing": 1,
                    "marginLeft": 6,
                  },
                  undefined,
                ]
              }
            >
              TWITTER
            </Text>
          </View>
        </View>
      </View>
    </View>
  </Modal>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Array [
          Array [
            Object {
              "margin": 37.5,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
            },
            Object {
              "flex": 1,
              "justifyContent": "center",
            },
            undefined,
            Object {
              "margin": 0,
            },
          ],
          Object {
            "paddingBottom": 0,
          },
        ]
      }
    >
      <View
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        onModalWillHide={[Function]}
        onModalWillShow={[Function]}
        pointerEvents="box-none"
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "margin": 37.5,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
          }
        }
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeThreshold={100}
      >
        <View
          style={
            Object {
              "backgroundColor": "#fff",
              "borderRadius": 5,
              "padding": 10,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              style={
                Object {
                  "flexGrow": 1,
                  "fontFamily": "Roboto",
                  "fontSize": 14,
                  "fontWeight": "600",
                  "letterSpacing": 1,
                  "marginLeft": 10,
                }
              }
            >
              LOCK BY WIRE
            </Text>
            <Text
              allowFontScaling={false}
              onPress={[Function]}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 28,
                  },
                  Object {
                    "alignSelf": "flex-end",
                    "marginRight": 10,
                    "padding": 5,
                  },
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
          <View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "marginTop": 15,
                  "paddingLeft": 10,
                  "paddingRight": 10,
                }
              }
            >
              <TextInput
                allowFontScaling={true}
                keyboardType="numeric"
                onChangeText={[Function]}
                style={
                  Object {
                    "backgroundColor": "#eee",
                    "borderRadius": 3,
                    "color": "#666",
                    "flexGrow": 1,
                    "fontSize": 16,
                    "fontWeight": "300",
                    "marginRight": 3,
                    "padding": 5,
                    "textAlign": "right",
                  }
                }
                underlineColorAndroid="transparent"
                value="0"
              />
              <Text
                style={
                  Object {
                    "color": "#666",
                    "fontFamily": "Roboto",
                    "fontSize": 14,
                    "fontWeight": "300",
                    "letterSpacing": 1,
                  }
                }
              >
                TOKENS
              </Text>
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginTop": 15,
                }
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    Object {
                      "borderColor": "#ececec",
                      "borderRadius": 30,
                      "borderWidth": 1,
                      "padding": 8,
                    },
                    Object {
                      "backgroundColor": "transparent",
                    },
                    undefined,
                    Object {
                      "borderColor": "#4690D6",
                    },
                    false,
                  ]
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "paddingLeft": 5,
                      },
                      Object {
                        "paddingRight": 5,
                      },
                      Object {
                        "textAlign": "center",
                      },
                      undefined,
                      Object {
                        "color": "#4690D6",
                      },
                      false,
                    ]
                  }
                >
                  Done
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </Modal>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Array [
          Array [
            Object {
              "margin": 37.5,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
            },
            Object {
              "flex": 1,
              "justifyContent": "center",
            },
            undefined,
            Object {
              "margin": 0,
            },
          ],
          Object {
            "paddingBottom": 0,
          },
        ]
      }
    >
      <View
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        onModalWillHide={[Function]}
        onModalWillShow={[Function]}
        pointerEvents="box-none"
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "margin": 37.5,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
          }
        }
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeThreshold={100}
      >
        <View
          style={
            Object {
              "backgroundColor": "#fff",
              "borderRadius": 5,
              "padding": 10,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              style={
                Object {
                  "flexGrow": 1,
                  "fontFamily": "Roboto",
                  "fontSize": 14,
                  "fontWeight": "600",
                  "letterSpacing": 1,
                  "marginLeft": 10,
                }
              }
            >
              HASHTAGS
            </Text>
            <Text
              onPress={[Function]}
              style={
                Array [
                  Object {
                    "flexGrow": 1,
                    "fontFamily": "Roboto",
                    "fontSize": 14,
                    "fontWeight": "600",
                    "letterSpacing": 1,
                    "marginLeft": 10,
                  },
                  Object {
                    "borderColor": "#cccccc",
                    "borderRadius": 10,
                    "borderWidth": 1,
                    "color": "#777777",
                    "flexGrow": 0,
                    "fontSize": 12,
                    "fontWeight": "400",
                    "marginRight": 10,
                    "padding": 5,
                    "textAlign": "center",
                  },
                  null,
                ]
              }
            >
              SUGGESTED
            </Text>
            <Text
              allowFontScaling={false}
              onPress={[Function]}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 28,
                  },
                  Object {
                    "alignSelf": "flex-end",
                    "marginRight": 10,
                    "padding": 5,
                  },
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
          <RCTScrollView
            keyboardShouldPersistTaps="always"
          >
            <View>
              <View
                style={
                  Object {
                    "alignItems": "flex-start",
                    "display": "flex",
                    "flex": 1,
                    "flexDirection": "row",
                    "flexWrap": "wrap",
                  }
                }
              />
              <TextInput
                allowFontScaling={true}
                autoCapitalize="none"
                autoFocus={true}
                blurOnSubmit={false}
                keyboardType="default"
                onChangeText={[Function]}
                onEndEditing={[Function]}
                onSubmitEditing={[Function]}
                placeholder="eg. science"
                returnKeyType="next"
                style={
                  Object {
                    "borderBottomWidth": 1,
                    "borderColor": "#ccc",
                    "height": 35,
                    "padding": 10,
                    "width": "100%",
                  }
                }
                underlineColorAndroid="transparent"
                value=""
              />
            </View>
          </RCTScrollView>
        </View>
      </View>
    </View>
  </Modal>
</View>
`;
